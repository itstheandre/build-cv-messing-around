{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/andredealbuquerque/Projects/personal-website/build-cv/src/pages/index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport dynamic from \"next/dynamic\";\nimport styled from \"styled-components\";\nimport base from \"axios\";\n// import { startingForm } from \"../utils/startingForm\";\nimport { startingForm } from \"../utils\";\nimport Form from \"../components/Form\";\nvar axios = base.create({\n  baseURL: \"http://localhost:3000/api\"\n});\nvar DynamicComponentWithNoSSR = dynamic(_c = function _c() {\n  return import(\"../components/PdfView\");\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak(\"../components/PdfView\")];\n    },\n    modules: [\"../components/PdfView\"]\n  }\n});\n_c2 = DynamicComponentWithNoSSR;\nvar App = styled.div.withConfig({\n  displayName: \"pages__App\",\n  componentId: \"sc-1kdlu6i-0\"\n})([\".pdf{display:flex;justify-content:space-between;}iframe{width:50vw;height:100vh;}\"]);\n_c3 = App;\n\nvar Index = function Index(props) {\n  _s();\n\n  console.log(\"props:\", props);\n\n  var _useState = useState(props.experiences),\n      experiences = _useState[0],\n      setExperiences = _useState[1];\n\n  console.log(\"experiences:\", experiences);\n\n  function edit() {}\n\n  function updateExperiences(newExperience) {\n    console.log(\"newExperience:\", newExperience);\n    setExperiences(experiences.map(function (el) {\n      return el.id === newExperience.id ? _objectSpread({}, newExperience) : _objectSpread({}, el);\n    }));\n  }\n\n  function handleSubmit(_x) {\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function addMoreExperience() {\n    setExperiences([].concat(_toConsumableArray(experiences), [startingForm]));\n  }\n\n  return __jsx(App, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, \"Hello\"), __jsx(\"div\", {\n    className: \"pdf\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, experiences.map(function (el) {\n    return __jsx(Form, {\n      key: el.id,\n      experience: el,\n      updateExperiences: updateExperiences,\n      updateAll: function updateAll(e, xp) {\n        var _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n        setExperiences(experiences.map(function (x) {\n          return x.id === xp.id ? _objectSpread(_objectSpread({}, xp), {}, _defineProperty({}, name, value)) : x;\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    });\n  }), __jsx(\"button\", {\n    onClick: addMoreExperience,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \"Add New Experience\"), __jsx(DynamicComponentWithNoSSR, {\n    experiences: experiences,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(Index, \"FU82Z17BVjKuzkbluutK2jzchrE=\");\n\n_c4 = Index;\nexport var __N_SSG = true;\nexport default Index;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"DynamicComponentWithNoSSR$dynamic\");\n$RefreshReg$(_c2, \"DynamicComponentWithNoSSR\");\n$RefreshReg$(_c3, \"App\");\n$RefreshReg$(_c4, \"Index\");","map":{"version":3,"sources":["/Users/andredealbuquerque/Projects/personal-website/build-cv/src/pages/index.js"],"names":["React","useState","dynamic","styled","base","startingForm","Form","axios","create","baseURL","DynamicComponentWithNoSSR","ssr","App","div","Index","props","console","log","experiences","setExperiences","edit","updateExperiences","newExperience","map","el","id","handleSubmit","e","addMoreExperience","xp","target","name","value","x"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport dynamic from \"next/dynamic\";\nimport styled from \"styled-components\";\nimport base from \"axios\";\nimport { prisma } from \"../utils/prismaClient\";\n// import { startingForm } from \"../utils/startingForm\";\nimport { startingForm } from \"../utils\";\nimport Form from \"../components/Form\";\n\nconst axios = base.create({\n  baseURL: \"http://localhost:3000/api\",\n});\n\nconst DynamicComponentWithNoSSR = dynamic(\n  () => import(\"../components/PdfView\"),\n  { ssr: false }\n);\n\nconst App = styled.div`\n  .pdf {\n    display: flex;\n    justify-content: space-between;\n  }\n  iframe {\n    width: 50vw;\n    height: 100vh;\n  }\n`;\n\nconst Index = (props) => {\n  console.log(\"props:\", props);\n\n  const [experiences, setExperiences] = useState(props.experiences);\n  console.log(\"experiences:\", experiences);\n\n  function edit() {}\n\n  function updateExperiences(newExperience) {\n    console.log(\"newExperience:\", newExperience);\n    setExperiences(\n      experiences.map((el) =>\n        el.id === newExperience.id ? { ...newExperience } : { ...el }\n      )\n    );\n  }\n\n  async function handleSubmit(e) {\n    //  e.preventDefault();\n    //  try {\n    //    const newForm = Object.entries(form).reduce((acc, val) => {\n    //      if (!val[1]) {\n    //        return acc;\n    //      }\n    //      return { ...acc, [val[0]]: val[1] };\n    //    }, {});\n    //    const { data } = await axios.post(\"create\", newForm);\n    //    console.log(\"data:\", data);\n    //  } catch (error) {\n    //    console.log(\"error:\", error);\n    //  }\n  }\n\n  function addMoreExperience() {\n    setExperiences([...experiences, startingForm]);\n  }\n  return (\n    <App>\n      <h1>Hello</h1>\n      <div className=\"pdf\">\n        {experiences.map((el) => (\n          <Form\n            key={el.id}\n            experience={el}\n            updateExperiences={updateExperiences}\n            updateAll={(e, xp) => {\n              const { name, value } = e.target;\n              setExperiences(\n                experiences.map((x) =>\n                  x.id === xp.id ? { ...xp, [name]: value } : x\n                )\n              );\n            }}\n          />\n        ))}\n        <button onClick={addMoreExperience}>Add New Experience</button>\n        <DynamicComponentWithNoSSR experiences={experiences} />\n      </div>\n    </App>\n  );\n};\n\nexport default Index;\n\nexport async function getStaticProps() {\n  const experiences = await prisma.experience.findMany({});\n\n  return { props: { experiences } };\n}\n"]},"metadata":{},"sourceType":"module"}