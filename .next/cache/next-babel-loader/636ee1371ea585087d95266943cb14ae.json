{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/andredealbuquerque/Projects/personal-website/build-cv/src/components/Form.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\n\nvar Form = function Form(_ref) {\n  _s();\n\n  var experience = _ref.experience,\n      updateExperiences = _ref.updateExperiences,\n      updateAll = _ref.updateAll;\n\n  var _useState = useState({\n    company: experience.company,\n    name: experience.name,\n    description: experience.description\n  }),\n      form = _useState[0],\n      setForm = _useState[1];\n\n  var _useState2 = useState(false),\n      isCompany = _useState2[0],\n      setIsCompany = _useState2[1];\n\n  var _useState3 = useState(false),\n      isPersonal = _useState3[0],\n      setIsPersonal = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      message = _useState4[0],\n      setMessage = _useState4[1];\n\n  function handleTextChange(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n    setForm(_objectSpread(_objectSpread({}, form), {}, _defineProperty({}, name, value)));\n    updateAll(e, experience);\n  }\n\n  function inputChange(e) {\n    var _e$target2 = e.target,\n        name = _e$target2.name,\n        checked = _e$target2.checked;\n    console.log(\"{name, checked}:\", name, checked);\n  }\n\n  function messageToShow(msg) {\n    setMessage(string);\n    setTimeout(function () {\n      setMessage(\"\");\n    }, 2000);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (!isPersonal && !isCompany) {\n      return messageToShow(\"Company or personal needs to be toggled need to choose either \");\n    }\n\n    updateExperiences(_objectSpread(_objectSpread({}, form), {}, {\n      id: experience.id\n    }));\n  }\n\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"Name of project\"), __jsx(\"input\", {\n    value: form.name,\n    name: \"name\",\n    onChange: handleTextChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), __jsx(\"textarea\", {\n    name: \"description\",\n    value: form.description,\n    onChange: handleTextChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Company?\"), __jsx(\"input\", {\n    type: \"checkbox\",\n    name: \"isCompany\",\n    value: isCompany,\n    onChange: inputChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  })), __jsx(\"button\", {\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"Submit\"));\n};\n\n_s(Form, \"i2jz5TN7q1S5mP5HUebJ50kMtGs=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/andredealbuquerque/Projects/personal-website/build-cv/src/components/Form.js"],"names":["React","useState","Form","experience","updateExperiences","updateAll","company","name","description","form","setForm","isCompany","setIsCompany","isPersonal","setIsPersonal","message","setMessage","handleTextChange","e","target","value","inputChange","checked","console","log","messageToShow","msg","string","setTimeout","handleSubmit","preventDefault","id"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nconst Form = ({ experience, updateExperiences, updateAll }) => {\n  const [form, setForm] = useState({\n    company: experience.company,\n    name: experience.name,\n    description: experience.description,\n  });\n\n  const [isCompany, setIsCompany] = useState(false);\n  const [isPersonal, setIsPersonal] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  function handleTextChange(e) {\n    const { name, value } = e.target;\n    setForm({ ...form, [name]: value });\n    updateAll(e, experience);\n  }\n\n  function inputChange(e) {\n    const { name, checked } = e.target;\n    console.log(\"{name, checked}:\", name, checked);\n  }\n\n  function messageToShow(msg) {\n    setMessage(string);\n    setTimeout(() => {\n      setMessage(\"\");\n    }, 2000);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (!isPersonal && !isCompany) {\n      return messageToShow(\n        \"Company or personal needs to be toggled need to choose either \"\n      );\n    }\n    updateExperiences({ ...form, id: experience.id });\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>Name of project</label>\n      <input value={form.name} name=\"name\" onChange={handleTextChange} />\n      <textarea\n        name=\"description\"\n        value={form.description}\n        onChange={handleTextChange}\n      />\n      <div>\n        <label>Company?</label>\n        <input\n          type=\"checkbox\"\n          name=\"isCompany\"\n          value={isCompany}\n          onChange={inputChange}\n        />\n      </div>\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}