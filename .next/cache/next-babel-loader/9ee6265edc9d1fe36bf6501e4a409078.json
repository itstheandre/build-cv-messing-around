{"ast":null,"code":"var _jsxFileName = \"/Users/andredealbuquerque/Projects/personal-website/build-cv/src/components/Form.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from \"react\";\n\nconst Form = ({\n  experience,\n  updateExperiences,\n  updateAll\n}) => {\n  const {\n    0: form,\n    1: setForm\n  } = useState({\n    company: null,\n    name: experience.name,\n    description: experience.description\n  });\n  const {\n    0: isCompany,\n    1: setIsCompany\n  } = useState(false);\n  const {\n    0: isPersonal,\n    1: setIsPersonal\n  } = useState(false);\n  const {\n    0: message,\n    1: setMessage\n  } = useState(\"\");\n\n  function handleTextChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    setForm(_objectSpread(_objectSpread({}, form), {}, {\n      [name]: value\n    }));\n    updateAll(e, experience);\n  }\n\n  function inputChange(e) {\n    const {\n      name,\n      checked\n    } = e.target;\n    console.log(\"{name, checked}:\", name, checked);\n\n    if (name === \"isCompany\") {\n      return setIsCompany(checked);\n    }\n\n    setIsPersonal(checked);\n  }\n\n  function messageToShow(msg) {\n    setMessage(string);\n    setTimeout(() => {\n      setMessage(\"\");\n    }, 2000);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (!isPersonal && !isCompany) {\n      return messageToShow(\"Company or personal needs to be toggled need to choose either \");\n    }\n\n    updateExperiences(_objectSpread(_objectSpread({}, form), {}, {\n      id: experience.id\n    }));\n  }\n\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Name of project\"), __jsx(\"input\", {\n    value: form.name,\n    name: \"name\",\n    onChange: handleTextChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), __jsx(\"textarea\", {\n    name: \"description\",\n    value: form.description,\n    onChange: handleTextChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"Company?\"), __jsx(\"input\", {\n    type: \"checkbox\",\n    name: \"isCompany\",\n    value: isCompany,\n    onChange: inputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \"Personal?\"), __jsx(\"input\", {\n    type: \"checkbox\",\n    name: \"isPersonal\",\n    value: isPersonal,\n    onChange: inputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  })), __jsx(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, \"Submit\"));\n};\n\nexport default Form;","map":{"version":3,"sources":["/Users/andredealbuquerque/Projects/personal-website/build-cv/src/components/Form.js"],"names":["React","useState","Form","experience","updateExperiences","updateAll","form","setForm","company","name","description","isCompany","setIsCompany","isPersonal","setIsPersonal","message","setMessage","handleTextChange","e","value","target","inputChange","checked","console","log","messageToShow","msg","string","setTimeout","handleSubmit","preventDefault","id"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nconst Form = ({ experience, updateExperiences, updateAll }) => {\n  const [form, setForm] = useState({\n    company: null,\n    name: experience.name,\n    description: experience.description,\n  });\n\n  const [isCompany, setIsCompany] = useState(false);\n  const [isPersonal, setIsPersonal] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  function handleTextChange(e) {\n    const { name, value } = e.target;\n    setForm({ ...form, [name]: value });\n    updateAll(e, experience);\n  }\n\n  function inputChange(e) {\n    const { name, checked } = e.target;\n    console.log(\"{name, checked}:\", name, checked);\n    if (name === \"isCompany\") {\n      return setIsCompany(checked);\n    }\n    setIsPersonal(checked);\n  }\n\n  function messageToShow(msg) {\n    setMessage(string);\n    setTimeout(() => {\n      setMessage(\"\");\n    }, 2000);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (!isPersonal && !isCompany) {\n      return messageToShow(\n        \"Company or personal needs to be toggled need to choose either \"\n      );\n    }\n\n    updateExperiences({ ...form, id: experience.id });\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>Name of project</label>\n      <input value={form.name} name=\"name\" onChange={handleTextChange} />\n      <textarea\n        name=\"description\"\n        value={form.description}\n        onChange={handleTextChange}\n      />\n      <div>\n        <label>Company?</label>\n        <input\n          type=\"checkbox\"\n          name=\"isCompany\"\n          value={isCompany}\n          onChange={inputChange}\n        />\n      </div>\n      <div>\n        <label>Personal?</label>\n        <input\n          type=\"checkbox\"\n          name=\"isPersonal\"\n          value={isPersonal}\n          onChange={inputChange}\n        />\n      </div>\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}