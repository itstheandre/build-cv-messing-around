{"ast":null,"code":"var _jsxFileName = \"/Users/andredealbuquerque/Projects/personal-website/build-cv/src/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from \"react\";\nimport dynamic from \"next/dynamic\";\nimport styled from \"styled-components\";\nimport { prisma } from \"../utils/prismaClient\";\nimport base from \"axios\";\nconst axios = base.create({\n  baseURL: \"http://localhost:3000/api\"\n});\nconst DynamicComponentWithNoSSR = dynamic(() => import(\"../components/PdfView\"), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"../components/PdfView\")],\n    modules: [\"../components/PdfView\"]\n  }\n});\nconst App = styled.div.withConfig({\n  displayName: \"pages__App\",\n  componentId: \"sc-1kdlu6i-0\"\n})([\".pdf{display:flex;justify-content:space-between;}iframe{width:50vw;height:100vh;}\"]);\n\nconst Index = props => {\n  console.log(\"props:\", props);\n  const {\n    0: form,\n    1: setForm\n  } = useState({\n    company: \"\",\n    name: \"\",\n    description: \"\"\n  });\n  console.log(\"form:\", form);\n\n  function handleTextChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    setForm(_objectSpread(_objectSpread({}, form), {}, {\n      [name]: value\n    }));\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      const newForm = Object.entries(form).reduce((acc, val) => {\n        if (!val[1]) {\n          return acc;\n        }\n\n        return _objectSpread(_objectSpread({}, acc), {}, {\n          [val[0]]: val[1]\n        });\n      }, {});\n      const {\n        data\n      } = await axios.post(\"create\", newForm);\n      console.log(\"data:\", data);\n    } catch (error) {\n      console.log(\"error:\", error);\n    }\n  }\n\n  return __jsx(App, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"Hello\"), __jsx(\"div\", {\n    className: \"pdf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, \"Name of project\"), __jsx(\"input\", {\n    value: form.name,\n    name: \"name\",\n    onChange: handleTextChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }), __jsx(\"textarea\", {\n    name: \"description\",\n    value: form.description,\n    onChange: handleTextChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, \"Submit\")), __jsx(DynamicComponentWithNoSSR, {\n    experiences: props.experiences,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Index;\nexport async function getStaticProps() {\n  const experiences = await prisma.experience.findMany({});\n  return {\n    props: {\n      experiences\n    }\n  };\n}","map":{"version":3,"sources":["/Users/andredealbuquerque/Projects/personal-website/build-cv/src/pages/index.js"],"names":["React","useState","dynamic","styled","prisma","base","axios","create","baseURL","DynamicComponentWithNoSSR","ssr","App","div","Index","props","console","log","form","setForm","company","name","description","handleTextChange","e","value","target","handleSubmit","preventDefault","newForm","Object","entries","reduce","acc","val","data","post","error","experiences","getStaticProps","experience","findMany"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport dynamic from \"next/dynamic\";\nimport styled from \"styled-components\";\nimport { prisma } from \"../utils/prismaClient\";\nimport base from \"axios\";\nconst axios = base.create({\n  baseURL: \"http://localhost:3000/api\",\n});\n\nconst DynamicComponentWithNoSSR = dynamic(\n  () => import(\"../components/PdfView\"),\n  { ssr: false }\n);\n\nconst App = styled.div`\n  .pdf {\n    display: flex;\n    justify-content: space-between;\n  }\n  iframe {\n    width: 50vw;\n    height: 100vh;\n  }\n`;\n\nconst Index = (props) => {\n  console.log(\"props:\", props);\n\n  const [form, setForm] = useState({\n    company: \"\",\n    name: \"\",\n    description: \"\",\n  });\n  console.log(\"form:\", form);\n\n  function handleTextChange(e) {\n    const { name, value } = e.target;\n    setForm({ ...form, [name]: value });\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    try {\n      const newForm = Object.entries(form).reduce((acc, val) => {\n        if (!val[1]) {\n          return acc;\n        }\n        return { ...acc, [val[0]]: val[1] };\n      }, {});\n      const { data } = await axios.post(\"create\", newForm);\n      console.log(\"data:\", data);\n    } catch (error) {\n      console.log(\"error:\", error);\n    }\n  }\n  return (\n    <App>\n      <h1>Hello</h1>\n      <div className=\"pdf\">\n        <form onSubmit={handleSubmit}>\n          <label>Name of project</label>\n          <input value={form.name} name=\"name\" onChange={handleTextChange} />\n          <textarea\n            name=\"description\"\n            value={form.description}\n            onChange={handleTextChange}\n          />\n          <button type=\"submit\">Submit</button>\n        </form>\n        <DynamicComponentWithNoSSR experiences={props.experiences} />\n      </div>\n    </App>\n  );\n};\n\nexport default Index;\n\nexport async function getStaticProps() {\n  const experiences = await prisma.experience.findMany({});\n\n  return { props: { experiences } };\n}\n"]},"metadata":{},"sourceType":"module"}